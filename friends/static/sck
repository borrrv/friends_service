openapi: 3.0.2
info:
  title: 'Django-сервис для друзей'
  version: 'v1'
paths:
    /auth/token/login/:
      post:
        operationId: Получить токен
        description: ''
        parameters:
        - name: username
          required: True
          description: Логин.
          schema:
            type: string
        - name: password
          required: True
          description: Пароль
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    auth_token:
                      type: string
        tags:
          - auth
    /api/users/:
      get:
        operationId: Список пользователей
        description: ''
        parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    count:
                      type: integer
                      example: 123
                    next:
                      type: string
                      nullable: true
                      format: uri
                      example: http://api.example.org/accounts/?page=4
                    previous:
                      type: string
                      nullable: true
                      format: uri
                      example: http://api.example.org/accounts/?page=2
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
            description: ''
        tags:
        - api
      post:
        operationId: Регистрация пользователя
        description: ''
        parameters: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/UserCreate'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/UserCreate'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserCreate'
            description: ''
        tags:
        - api
    /api/users/friends/:
      get:
        operationId: Получить список друзей
        description: "Просмотр друзей текущего пользователя"
        parameters: []
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Friends'
            description: ''
        tags:
        - api
    /api/users/incoming/:
      get:
        operationId: Входящие заявки в друзья
        description: "Просмотр входящих заявок в друзья текущего пользователя"
        parameters: []
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Friends'
            description: ''
        tags:
        - api
    /api/users/me/:
      get:
        operationId: meUser
        description: ''
        parameters: []
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CustomUser'
            description: ''
        tags:
        - api
    /api/users/outgoing/:
      get:
        operationId: Исходящие заявки в друзья
        description: "\u041F\u0440\u043E\u0441\u043C\u043E\u0442\u0440 \u0438\u0441\u0445\
          \u043E\u0434\u044F\u0449\u0438\u0445 \u0437\u0430\u044F\u0432\u043E\u043A"
        parameters: []
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Friends'
            description: ''
        tags:
        - api
   
    /api/users/{id}/status/:
      get:
        operationId: Статус дружбы
        description: "\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0441\u0442\u0430\
          \u0442\u0443\u0441\u0430 \u0434\u0440\u0443\u0436\u0431\u044B"
        parameters:
        - name: id
          in: path
          required: true
          description: "Id пользователя"
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
            description: ''
        tags:
        - api
  
    /api/users/{id}/add/:
      post:
        operationId: Принять заявку в друзья
        description: "Принять заявку в друзья"
        parameters:
        - name: id
          in: path
          required: true
          description: "Id пользователя"
          schema:
            type: string

        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
            description: ''
        tags:
        - api
      delete:
        operationId: Отклонить заявку в друзья
        description: "Отклонить заявку в друзья"
        parameters:
        - name: id
          in: path
          required: true
          description: "Id пользователя
          schema:
            type: string
        responses:
          '204':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
            description: ''
        tags:
        - api
    /api/users/{id}/offer/:
      post:
        operationId: offerUser
        description: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0432\
          \ \u0434\u0440\u0443\u0437\u044C\u044F"
        parameters:
        - name: id
          in: path
          required: true
          description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/CustomUser'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/CustomUser'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CustomUser'
            description: ''
        tags:
        - api
    /api/auth/token/login/:
      post:
        operationId: createTokenCreate
        description: Use this endpoint to obtain user authentication token.
        parameters: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/TokenCreate'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/TokenCreate'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TokenCreate'
            description: ''
        tags:
        - api
    /api/auth/token/logout/:
      post:
        operationId: createTokenDestroy
        description: Use this endpoint to logout user (remove user authentication token).
        parameters: []
        requestBody:
          content:
            application/json:
              schema: {}
            application/x-www-form-urlencoded:
              schema: {}
            multipart/form-data:
              schema: {}
        responses:
          '201':
            content:
              application/json:
                schema: {}
            description: ''
        tags:
        - api
    /api/users/{id}/delete/:
      delete:
        operationId: destroyUser
        description: "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0437 \u0434\u0440\
          \u0443\u0437\u0435\u0439"
        parameters:
        - name: id
          in: path
          required: true
          description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
        responses:
          '204':
            description: ''
        tags:
        - api
components:
  schemas:
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        friends:
          type: [string]
          readOnly: true
      required:
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
    UserCreate:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          maxLength: 150
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    Friends:
      type: object
      properties:
        username:
          type: string
    Status:
      type: object
      properties:
        message:
          type: string